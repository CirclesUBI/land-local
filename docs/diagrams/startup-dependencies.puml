@startuml
!include <C4/C4_Container>

WithoutPropertyHeader()
AddProperty("ports", "5433:5432")
AddProperty("volume", "${PWD}/.state/indexer-db/pg_data:/var/lib/postgresql/data")
Container(indexer_db, "indexer-db")
WithoutPropertyHeader()
Container(indexer_db_init, "indexer-db-init")
WithoutPropertyHeader()
AddProperty("ports", "5432:5432")
AddProperty("volume", "${PWD}/.state/api-db/pg_data:/var/lib/postgresql/data")
Container(api_db, "api-db")
WithoutPropertyHeader()
AddProperty("volume", "${PWD}/.state/ganache-init/status/:/app/status/")
Container(api_db_init, "api-db-init")
WithoutPropertyHeader()
AddProperty("volume", "${PWD}/../../../api-server:/api-server")
Container(api_server, "api-server")
WithoutPropertyHeader()
AddProperty("ports", "8675:8675")
Container(blockchain_indexer, "blockchain-indexer")
WithoutPropertyHeader()
AddProperty("ports", "8545:8545")
AddProperty("volume", "${PWD}/.state/ganache:/var/ganache-db")
Container(ganache, "ganache")
WithoutPropertyHeader()
AddProperty("volume", "${PWD}/.state/ganache-init/status/:/app/status/")
Container(ganache_init, "ganache-init")
WithoutPropertyHeader()
Container(other_blockchain_user, "other-blockchain-user")
WithoutPropertyHeader()
AddProperty("volume", "${PWD}/.state/pathfinder:/var/pathfinder2/data")
Container(pathfinder2_updater, "pathfinder2-updater")
WithoutPropertyHeader()
AddProperty("volume", "${PWD}/.state/pathfinder:/var/pathfinder2/data")
Container(pathfinder2, "pathfinder2")
WithoutPropertyHeader()
AddProperty("ports", "8081:80")
Container(pathfinder_proxy, "pathfinder-proxy")
WithoutPropertyHeader()
AddProperty("volume", "${PWD}/../../../o-platform:/o-platform")
Container(frontend, "frontend")
WithoutPropertyHeader()
AddProperty("ports", "9000:9000")
AddProperty("ports", "9090:9090")
AddProperty("volume", "${PWD}/.state/minio/data:/export")
AddProperty("volume", "${PWD}/.state/minio/.minio:/root/.minio")
Container(minio, "minio")
WithoutPropertyHeader()
Container(minio_init, "minio-init")
WithoutPropertyHeader()
AddProperty("ports", "80:80")
AddProperty("ports", "443:443")
AddProperty("ports", "443:443/udp")
AddProperty("volume", "${PWD}/../../modules/caddy-src:/etc/caddy/")
AddProperty("volume", "${PWD}/.state/caddy/data:/data")
AddProperty("volume", "${PWD}/.state/caddy/config:/config")
Container(caddy, "caddy")
Rel_D(indexer_db_init, indexer_db, "when: service_healthy", "")
Rel_D(api_db_init, api_db, "when: service_healthy", "")
Rel_D(api_db_init, ganache_init, "when: service_healthy", "")
Rel_D(api_server, api_db_init, "when: service_healthy", "")
Rel_D(api_server, ganache_init, "when: service_healthy", "")
Rel_D(api_server, blockchain_indexer, "when: service_started", "")
Rel_D(api_server, pathfinder_proxy, "when: service_started", "")
Rel_D(api_server, minio_init, "when: service_started", "")
Rel_D(blockchain_indexer, ganache_init, "when: service_healthy", "")
Rel_D(blockchain_indexer, indexer_db_init, "when: service_healthy", "")
Rel_D(ganache_init, ganache, "depends-on", "")
Rel_D(other_blockchain_user, ganache_init, "when: service_healthy", "")
Rel_D(pathfinder2_updater, pathfinder2, "depends-on", "")
Rel_D(pathfinder2_updater, blockchain_indexer, "depends-on", "")
Rel_D(pathfinder_proxy, pathfinder2_updater, "depends-on", "")
Rel_D(pathfinder_proxy, pathfinder2, "depends-on", "")
Rel_D(frontend, api_server, "depends-on", "")
Rel_D(minio_init, minio, "depends-on", "")
Rel_D(caddy, frontend, "depends-on", "")
Rel_D(caddy, api_server, "depends-on", "")

@enduml
